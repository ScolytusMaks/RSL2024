class inherited RI.—правочники.intBaseType1 '»нтерфейс записи (справочник, тип 1)';

import – ѕ_—»— Classes Functions, Recs;

inclass public

  var ќб€зательныеѕол€     :String[] = ['Ќаселенныйѕункт', 'Ќаим'];
  var ’ешируемыеѕол€       :String[] = ['Ќаселенныйѕункт', 'Ќаим'];

  func —в€занный ласс«аписей: Class BaseRefType1;
    Result = спр–едакци€;
  end;

  func Create: RI.—правочники.–едакци€;
    Result = inherited Create;
    Result.Record = спр–едакци€.Create;
  end;

  func ќткрытьѕо«аписи synonym OpenRecord(locRecord: спр–едакци€): RI.—правочники.–едакци€;
    Result = inherited Create;
    Result.Record = locRecord;
  end;

  func Ѕланк–едакторѕо”молчанию: Class —правочники.editBaseType1;
    Result = —правочники.ред–едакци€;
  end;

  func  артотекаѕо”молчанию: Class —правочники.CardBaseType1;
    Result = —правочники.карт–едакци€;
  end;

inobject public

  Record: спр–едакци€;

  proc »нициализировать synonym Init;
    Assert(Record.State = Kernel.Record.Created);
  end;

  proc »нициализироватьѕо”молчанию synonym InitByDefault;
    Init;
  end;



end