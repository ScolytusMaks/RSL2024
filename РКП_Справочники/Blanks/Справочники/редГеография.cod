Class inherited Справочники.editBaseType1 "Место издания" , editor спрГеография;


--{{ 2_Свойства


inobject private

  var Интерфейс :RI.Справочники.География;

  var Level     :Integer;

  var фреймАдмСтуртура          :TemplateFrame;
  var фреймШаблоны              :TemplateFrame;
  var секцЗаголовокАдмСтруктура :TemplateSection;
  var секцАдмСтатусУровень1     :TemplateSection;
  var секцАдмСтатусУровень2     :TemplateSection;
  var секцАдмСтатусУровень3     :TemplateSection;
  var секцАдмСтатусУровень4     :TemplateSection;
  var секцАдмСтатусУровень5     :TemplateSection;
  var секцДопДанные             :TemplateSection;

--}}


-- 2_Обработчики событий шаблона0. --

  proc шаблон_ПриСчитывании;
    var vCell :TemplateCell;
    inherited шаблон_ПриСчитывании;
    vCell = SectionCellByContents (секцАдмСтатусУровень1, 'Категория');                                       UpdateFieldList(vCell, Def.TerrEntityLevel1);
    vCell = SectionCellByContents (секцАдмСтатусУровень2, 'GroupDoc.Категория');                              UpdateFieldList(vCell, Def.TerrEntity);
    vCell = SectionCellByContents (секцАдмСтатусУровень2, 'Категория');                                       UpdateFieldList(vCell, Def.TerrEntityLevel2);
    vCell = SectionCellByContents (секцАдмСтатусУровень3, 'GroupDoc.GroupDoc.Категория');                     UpdateFieldList(vCell, Def.TerrEntity);
    vCell = SectionCellByContents (секцАдмСтатусУровень3, 'GroupDoc.Категория');                              UpdateFieldList(vCell, Def.TerrEntity);
    vCell = SectionCellByContents (секцАдмСтатусУровень3, 'Категория');                                       UpdateFieldList(vCell, Def.TerrEntityLevel3);
    vCell = SectionCellByContents (секцАдмСтатусУровень4, 'GroupDoc.GroupDoc.GroupDoc.Категория');            UpdateFieldList(vCell, Def.TerrEntity);
    vCell = SectionCellByContents (секцАдмСтатусУровень4, 'GroupDoc.GroupDoc.Категория');                     UpdateFieldList(vCell, Def.TerrEntity);
    vCell = SectionCellByContents (секцАдмСтатусУровень4, 'GroupDoc.Категория');                              UpdateFieldList(vCell, Def.TerrEntity);
    vCell = SectionCellByContents (секцАдмСтатусУровень4, 'Категория');                                       UpdateFieldList(vCell, Def.TerrEntityLevel4);
    vCell = SectionCellByContents (секцАдмСтатусУровень5, 'GroupDoc.GroupDoc.GroupDoc.GroupDoc.Категория');   UpdateFieldList(vCell, Def.TerrEntity);
    vCell = SectionCellByContents (секцАдмСтатусУровень5, 'GroupDoc.GroupDoc.GroupDoc.Категория');            UpdateFieldList(vCell, Def.TerrEntity);
    vCell = SectionCellByContents (секцАдмСтатусУровень5, 'GroupDoc.GroupDoc.Категория');                     UpdateFieldList(vCell, Def.TerrEntity);
    vCell = SectionCellByContents (секцАдмСтатусУровень5, 'GroupDoc.Категория');                              UpdateFieldList(vCell, Def.TerrEntity);
    vCell = SectionCellByContents (секцАдмСтатусУровень5, 'Категория');                                       UpdateFieldList(vCell, Def.TerrEntityLevel5);
    МодифицироватьШаблон;
  end;

  func шаблон_ПриПроверке :Logical;
    Result = inherited шаблон_ПриПроверке;
  end;

  func шаблон_ПриЗаписи :Logical;
    var i, ii :Integer;
    var vObj :РКП_Справочники.Справочники.картГеография;
    Result = inherited шаблон_ПриЗаписи;
    ii = РКП_Справочники.Справочники.картГеография.ObjectsCount;
    for i = 1 .. ii do
      vObj = РКП_Справочники.Справочники.картГеография.Objects[i];
      if (vObj.Cardfile.Filter <> nil) then
        vObj.ОбновитьФильтр;
      fi;
    od;
  end;


-- 2_Обработчики событий 0клеток 2шаблона0. --

  proc Поле_ПриВыходе_Наим(Cell :TemplateCell; Index :Integer);
    if Cell.Contents = 'Наим' then
      if (НаимСокр = nil) then
        НаимСокр = Наим;
        НаимБибл = BiblioRecord.НаимГео(Record);
        Hash = Интерфейс.GetHashByRecord(Self.Record);
      fi;
    fi;
  end;

  proc Поле_ПриВыходе_НаимСокр(Cell :TemplateCell; Index :Integer);
    НаимБибл = BiblioRecord.НаимГео(Record);
    Hash = Интерфейс.GetHashByRecord(Self.Record);
  end;

  proc ПолеОбл_Центр_ПриВыходе(Cell :TemplateCell; Index :Integer);
    НаимБибл = BiblioRecord.НаимГео(Record);
    Hash = Интерфейс.GetHashByRecord(Self.Record);
  end;


-- 2_Вспомогательные методы0. --

   proc УстановитьФокусНаПервоеПолеВвода;
    --Template.CellByField['Имя'].SetFocus;
   end;

   proc МодифицироватьШаблон;
     фреймАдмСтуртура.Clear;
     Level = РКП_СИС.Recs.RecordsLevel(Self.Record);
     if (Level in [1,2,3,4]) or ((Level = 5) and (not isGroup)) then
       CloneSection(фреймАдмСтуртура, 'секцЗаголовокАдмСтруктура', фреймШаблоны);
     fi;
     if (Level in [5]) and not isGroup then
       CloneSection(фреймАдмСтуртура, 'секцЗаголовокАдмСтруктура', фреймШаблоны);
     fi;
     if (Level = 1) then
       CloneSection(фреймАдмСтуртура, 'секцАдмСтатусУровень1', фреймШаблоны);
     elsif (Level = 2) then
       CloneSection(фреймАдмСтуртура, 'секцАдмСтатусУровень2', фреймШаблоны);
     elsif (Level = 3) then
       CloneSection(фреймАдмСтуртура, 'секцАдмСтатусУровень3', фреймШаблоны);
     elsif (Level = 4) then
       CloneSection(фреймАдмСтуртура, 'секцАдмСтатусУровень4', фреймШаблоны);
     elsif (Level = 5) and not isGroup then
       CloneSection(фреймАдмСтуртура, 'секцАдмСтатусУровень5', фреймШаблоны);
     elsif (Level = 5) and isGroup then
       CloneSection(фреймАдмСтуртура, 'секцОграничение1', фреймШаблоны);
     elsif (Level > 5) then
       CloneSection(фреймАдмСтуртура, 'секцОграничение2', фреймШаблоны);
     fi;
     if (Level in [1,2,3,4]) or ((Level = 5) and (not isGroup)) then
       CloneSection(фреймАдмСтуртура, 'секцДопДанные',         фреймШаблоны);
     fi;
   end;


end