Class inherited СИС2.БазовыйБланк "Отчет";

import РКП_СИС classes StringsFunctions;

--{{ 2_Свойства

inobject public
  var фреймУправление :TemplateFrame;

inobject private
  var фреймНадпись :TemplateFrame;
  var секцПозиции     :TemplateSection;
  var секцСПО         :TemplateSection;
  var секцВарианты    :TemplateSection;
  var фреймЗащита     :TemplateFrame;
  var ЗаДату1 :Logical;
  var ЗаДату2 :Logical;
  var ЗаДату3 :Logical;
  var ЗаДату4 :Logical;
  var ЗаДату5 :Logical;
  var ЗаДату6 :Logical;
  var ЗаДату :Integer;
  var ДатаН :Date;
  var ДатаК :Date;
  var Библиограф :String;
  var ИзмененияЗапрещены :Logical;

--}}

-- 2_Конструкторы, визуализаторы0. --

inclass public

inobject private

-- 2_Обработчики событий шаблона0. --

  proc шаблон_ПриСоздании(Context :Variant);
    inherited шаблон_ПриСоздании(Context);
    if (Self.ClassType <> РКП_СИС.блОтчетОРаботеБазовый) then
      НазначитьОбработчикЗаголовка;
      ЗагрузитьФреймУправление;
    fi;
  end;

  proc шаблон_ПриОткрытии(Create :Logical);
    inherited шаблон_ПриОткрытии(Create);
    УсловияОтбораНовогоОтчета;
  end;


-- 2_Обработчики событий клеток шаблона0. --

  func Поле_ПриВыводе_ДатаРасчета(Cell :TemplateCell; Value :Variant; Action :Template.OutputTypes; var Format :String) :Variant;
    Result = 'Дата расчета ' + Str(Now, 'dd mmmm yyyy г. (hh:mm:ss)');
  end;

  func Поле_ПриНажатии_СменаВариантаПериода(Cell :TemplateCell; Action :Template.ClickTypes):Logical;
    СменаВариантаПериода(Cell.Contents);
  end;

  func ПолеВвода_ПриПроверке(Cell :TemplateCell; Index :Integer; var Value :Variant) :Logical;
    Return true;
  end;

  proc ПолеВвода_ПриВыходе(Cell :TemplateCell; Index :Integer);
    if (Cell.Contents = 'ДатаН') then
      Template.CellByField['ДатаК'].SetFocus;
    fi;
  end;


-- 2_Обработчики событий прочих объектов шаблона0. --

  proc кнПриНажатии_ПостроитьОтчет(Sender :Button);
    ПостроитьОтчет;
  end;

-- 2_Дополнительные команды0. --


-- 2_Вспомогательные методы0. --

  proc СменаВариантаПериода(ИмяВарианта :String);
    ЗаДату1 = false;
    ЗаДату2 = false;
    ЗаДату3 = false;
    ЗаДату4 = false;
    ЗаДату5 = false;
    ЗаДату6 = false;
    ЗаДату  = nil;
    секцСПО.Row[1].Visible = false;
    секцСПО.Row[2].Visible = false;
    секцВарианты.CellByField['ЗаДату1'].Font.Bold = false;
    секцВарианты.CellByField['ЗаДату2'].Font.Bold = false;
    секцВарианты.CellByField['ЗаДату3'].Font.Bold = false;
    секцВарианты.CellByField['ЗаДату4'].Font.Bold = false;
    секцВарианты.CellByField['ЗаДату5'].Font.Bold = false;
    секцВарианты.CellByField['ЗаДату6'].Font.Bold = false;
    if (ИмяВарианта = 'ЗаДату1') then
      ЗаДату  = 0;
      ЗаДату1 = true;
      секцВарианты.CellByField['ЗаДату1'].Font.Bold = true;
      ДатаН = РКП_СИС.СтандартныйПериод.НачалоГода(today);
      ДатаК = today;
    elsif (ИмяВарианта = 'ЗаДату2') then
      ЗаДату  = 1;
      ЗаДату2 = true;
      секцВарианты.CellByField['ЗаДату2'].Font.Bold = true;
      ДатаН   = РКП_СИС.СтандартныйПериод.НачалоМесяца(today);
      ДатаК   = today;
    elsif (ИмяВарианта = 'ЗаДату3') then
      ЗаДату  = 2;
      ЗаДату3 = true;
      секцВарианты.CellByField['ЗаДату3'].Font.Bold = true;
      ДатаН   = РКП_СИС.СтандартныйПериод.НачалоКвартала(today);
      ДатаК   = today;
    elsif (ИмяВарианта = 'ЗаДату4') then
      ЗаДату  = 3;
      ЗаДату4 = true;
      секцВарианты.CellByField['ЗаДату4'].Font.Bold = true;
      ДатаН = РКП_СИС.СтандартныйПериод.НачалоГода(today);
      ДатаК = today;
    elsif (ИмяВарианта = 'ЗаДату5') then
      секцСПО.Row[1].Visible = true;
      секцСПО.Row[2].Visible = true;
      ЗаДату  = 4;
      ЗаДату5 = true;
      секцВарианты.CellByField['ЗаДату5'].Font.Bold = true;
      ДатаН = today;
      ДатаК = today;
    elsif (ИмяВарианта = 'ЗаДату6') then
      ЗаДату  = 5;
      ЗаДату6 = true;
      секцВарианты.CellByField['ЗаДату6'].Font.Bold = true;
      ДатаН = РКП_СИС.СтандартныйПериод.НачалоНедели(today);
      ДатаК = today;
    fi;
  end;

  proc УсловияОтбораНовогоОтчета;
    СменаВариантаПериода('ЗаДату5');
  end;

  proc НазначитьОбработчикЗаголовка;
    фреймНадпись.Section[1].Cell[1,1].OnOutput = 'Поле_ПриВыводе_ЗаголовокОкнаФормы';
  end;

  proc ЗагрузитьФреймУправление;
    var locFrmDonor :РКП_СИС.блОтчетОРаботеБазовый;
    locFrmDonor = РКП_СИС.блОтчетОРаботеБазовый.Create;
    locFrmDonor.фреймЗащита.Visible = false;
    Self.фреймУправление.Clear;
    Self.фреймУправление.Assign(locFrmDonor.фреймУправление);
  end;

  func ПостроитьОтчет :Logical;
    var vRec :Kernel.Settings.User;
    if (not nil in [ДатаН,ДатаК]) and (ДатаН<=ДатаК) then
      vRec = SessionInfo.UserRecord;
      if (vRec <> nil) then
        Библиограф = vRec.FullName;
      fi;
      Return true;
    else
      Message('Введен некорректный период! Перестроение отчета невозможно.');
    fi;
  end;

end