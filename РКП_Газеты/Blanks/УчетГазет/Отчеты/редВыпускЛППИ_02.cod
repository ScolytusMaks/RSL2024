class inherited УчетГазет.Отчеты.РедВыпускЛППИ_01 "";

inclass

inobject
секцУказательАдм      : TemplateSection;
секцИерархияРФ        : TemplateSection;


var КодСортировки1      : integer[];
var НаимСубъектаРФ1     : string[];
var ФильтрСубъектаРФ1   : string[];
var НаимАвтономии1      : string[];
var ФильтрАвтономии1    : string[];

var КодСортировки2      : integer[];
var НаимСубъектаРФ2     : string[];
var НаимАвтономии2      : string[];
var МестоИздания2       : string[];
var НомерВЛППИ2         : integer[];

--------------------------------------------------------------------------------
--{ Обработчики событий бланка
 proc АнализИерархииРФ;
    var Q,Qavt                  : Query;
    var k,kavt                  : integer;
    var j,f                     : integer;
    var level                   : integer;
    КодСортировки1      = nil;
    НаимСубъектаРФ1     = nil;
    ФильтрСубъектаРФ1   = nil;
    НаимАвтономии1      = nil;
    ФильтрАвтономии1    = nil;
    секцИерархияРФ.Count=0;
    Q                   = Query.Create([РКП_Справочники.СпрГеография]);
    Q.Select;
    Q.First;
    for k = 1..Q.Count do
      Hint("Административно-территориальный указатель...",k,Q.Count);
      level             = РКП_СИС.Recs.RecordsLevel(Q.Current);
      if level=2                        then
        j                       = j+1;
        НаимСубъектаРФ1[j]      = Q.Current.Наим;
        ФильтрСубъектаРФ1[j]    = "("+
                                  "МестаИздания.Exists(МестоИздания.DocId="+Str(Q.Current.DocId)+") or "+
                                  "МестаИздания.Exists(МестоИздания.GroupDoc.DocId="+Str(Q.Current.DocId)+") or "+
                                  "МестаИздания.Exists(МестоИздания.GroupDoc.GroupDoc.DocId="+Str(Q.Current.DocId)+") or "+
                                  "МестаИздания.Exists(МестоИздания.GroupDoc.GroupDoc.GroupDoc.DocId="+Str(Q.Current.DocId)+") or "+
                                  "МестаИздания.Exists(МестоИздания.GroupDoc.GroupDoc.GroupDoc.GroupDoc.DocId="+Str(Q.Current.DocId)+")"+
                                  ")";


        if    Q.Current.Категория=2     then    КодСортировки1[j]       = 1;
        elsif Q.Current.Категория=3     then    КодСортировки1[j]       = 2;
        elsif Q.Current.Категория=4     then    КодСортировки1[j]       = 3;
        elsif Q.Current.Категория=6     then    КодСортировки1[j]       = 4;
        elsif Q.Current.Категория=7     then    КодСортировки1[j]       = 5;
        elsif Q.Current.Категория=5     then    КодСортировки1[j]       = 6;
        end;
        --поиск подчиненных автономий
        Qavt                    = Query.Create([РКП_Справочники.СпрГеография]);
        Qavt.Filter             = "("+
                                  "DocId="+Str(Q.Current.DocId)+" or "+
                                  "GroupDoc.DocId="+Str(Q.Current.DocId)+" or "+
                                  "GroupDoc.GroupDoc.DocId="+Str(Q.Current.DocId)+" or "+
                                  "GroupDoc.GroupDoc.GroupDoc.DocId="+Str(Q.Current.DocId)+" or "+
                                  "GroupDoc.GroupDoc.GroupDoc.GroupDoc.DocId="+Str(Q.Current.DocId)+") and "+
                                  "Категория=5";
        Qavt.Select;
        if Qavt.Count>0                 then
        НаимАвтономии1[j]       = "v";
        f                       = j;
          Qavt.First;
          for  kavt = 1..Qavt.Count     do
        j                       = j+1;
        if kavt = 1                     then
          ФильтрАвтономии1[f]   = "("+
                                  "МестаИздания.Exists(МестоИздания.DocId="+Str(Qavt.Current.DocId)+") or "+
                                  "МестаИздания.Exists(МестоИздания.GroupDoc.DocId="+Str(Qavt.Current.DocId)+") or "+
                                  "МестаИздания.Exists(МестоИздания.GroupDoc.GroupDoc.DocId="+Str(Qavt.Current.DocId)+")"+
                                  ")";
        else
          ФильтрАвтономии1[f]   = ФильтрАвтономии1[f]+
--                                  " and "+
                                  " or "+
                                  "("+
                                  "МестаИздания.Exists(МестоИздания.DocId="+Str(Qavt.Current.DocId)+") or "+
                                  "МестаИздания.Exists(МестоИздания.GroupDoc.DocId="+Str(Qavt.Current.DocId)+") or "+
                                  "МестаИздания.Exists(МестоИздания.GroupDoc.GroupDoc.DocId="+Str(Qavt.Current.DocId)+")"+
                                  ")";
        end;
        НаимСубъектаРФ1[j]      = НаимСубъектаРФ1[f];
        ФильтрСубъектаРФ1[j]    = ФильтрСубъектаРФ1[f];
        КодСортировки1[j]       = КодСортировки1[f];
        НаимАвтономии1[j]       = Qavt.Current.Наим;
        ФильтрАвтономии1[j]     = "("+
                                  "МестаИздания.Exists(МестоИздания.DocId="+Str(Qavt.Current.DocId)+") or "+
                                  "МестаИздания.Exists(МестоИздания.GroupDoc.DocId="+Str(Qavt.Current.DocId)+") or "+
                                  "МестаИздания.Exists(МестоИздания.GroupDoc.GroupDoc.DocId="+Str(Qavt.Current.DocId)+")"+
                                  ")";
            Qavt.Next;
          end;
        end;
        Qavt.Close;
      end;
      Q.Next;
    end;
    Q.Close;
    секцИерархияРФ.Count=j;
    секцИерархияРФ.SortBy("КодСортировки1,НаимСубъектаРФ1,НаимАвтономии1");
 end;

 proc ПодготовкаАдмУказателя;
   var t                        : integer;
   var Q                        : Query;
   var k                        : integer;
   var j,h                      : integer;
   КодСортировки2       = nil;
   НаимСубъектаРФ2      = nil;
   НаимАвтономии2       = nil;
   МестоИздания2        = nil;
   НомерВЛППИ2          = nil;
   секцУказательАдм.Count=0;
   for  t= 1..секцИерархияРФ.Count      do
    Hint("Административно-территориальный указатель...",t,секцИерархияРФ.Count);
     Q                  = Query.Create([РКП_Газеты.Газета]);
     --Q.Filter           = "(ПризнакОтсылки=false and ГодЛетописи="+Str(ГодЛетописи)+") ";
     Q.Filter           = "(ГодЛетописи="+Str(ГодЛетописи)+")"; -- and Соотв(НазваниеОсн,'*вести о*')"
     Q.Filter           = Q.Filter+" and ("+ФильтрСубъектаРФ1[t]+")";
     if     НаимАвтономии1[t]="v"       then
     Q.Filter           = Q.Filter+" and not ("+ФильтрАвтономии1[t]+")";
     elsif НаимАвтономии1[t]<>"v"       and
           НаимАвтономии1[t]<>""        then
     Q.Filter           = Q.Filter+" and ("+ФильтрАвтономии1[t]+")";
     end;
     Q.Select;
     Q.First;
       for k = 1..Q.Count do
         for h = 1..Q.Current.МестаИздания.Count        do
          j              = j+1;
          КодСортировки2[j]      = КодСортировки1[t];
          НаимСубъектаРФ2[j]     = НаимСубъектаРФ1[t];
          НаимАвтономии2[j]      = НаимАвтономии1[t];
          if  Q.Current.ПризнакОтсылки=false            then
          МестоИздания2[j]       = Q.Current.МестаИздания.Items[h].МестоИздания.Наим;
          НомерВЛППИ2[j]         = Q.Current.НомерВЛетописи;
          else
            if Q.Current.Отсылка<>nil                                           then
              if Q.Current.Отсылка.МестаИздания.Count<=h                        then
              if Q.Current.МестаИздания.Items[h].МестоИздания.Наим<>
                 Q.Current.Отсылка.МестаИздания.Items[h].МестоИздания.Наим      then
          МестоИздания2[j]       = Q.Current.МестаИздания.Items[h].МестоИздания.Наим;
          НомерВЛППИ2[j]         = Q.Current.Отсылка.НомерВЛетописи;
              else
          j              = j-1;
              end;
              else
          МестоИздания2[j]       = Q.Current.МестаИздания.Items[h].МестоИздания.Наим;
          НомерВЛППИ2[j]         = Q.Current.Отсылка.НомерВЛетописи;
              end;
            end;
          end;
         end;
         #Warning "Случай совпадения наборов мест изданий в отсылке и газете не отработан";
         if Q.Current.МестаИздания.Count>1              then
          j              = j+1;
          КодСортировки2[j]      = КодСортировки1[t];
          НаимСубъектаРФ2[j]     = НаимСубъектаРФ1[t];
          НаимАвтономии2[j]      = НаимАвтономии1[t];
          if  Q.Current.ПризнакОтсылки=false            then
            for h = 1..Q.Current.МестаИздания.Count     do
            if h=1 then
              МестоИздания2[j]   = Q.Current.МестаИздания.Items[h].МестоИздания.Наим;
            else
              МестоИздания2[j]   = МестоИздания2[j]+" ; "+Q.Current.МестаИздания.Items[h].МестоИздания.Наим;
            end;
            end;
          НомерВЛППИ2[j]         = Q.Current.НомерВЛетописи;
          else
          if Q.Current.Отсылка<>nil and Q.Current.Отсылка.ГодЛетописи=ГодЛетописи       then
            for h = 1..Q.Current.МестаИздания.Count     do
            if h=1 then
              МестоИздания2[j]   = Q.Current.МестаИздания.Items[h].МестоИздания.Наим;
            else
              МестоИздания2[j]   = МестоИздания2[j]+" ; "+Q.Current.МестаИздания.Items[h].МестоИздания.Наим;
            end;
            end;
          НомерВЛППИ2[j]         = Q.Current.Отсылка.НомерВЛетописи;
          end;
          end;
         end;
         Q.Next;
       end;
     Q.Close;
   секцУказательАдм.Count=j;
   секцУказательАдм.SortBy("КодСортировки2,НаимСубъектаРФ2,НаимАвтономии2,МестоИздания2,НомерВЛППИ2");
   end;
 end;


var СтрокаАдмУказателя[]:string;
proc СозданиеСтрокАдмУказателя;
    var k,j                     : integer;
    var Номера                  : string;
    var НаимСубъектаРФ          : string;
    var НаимАвтономии           : string;
    var МестоИздания            : string;
    var НаимСубъектаРФ2_        : string;
    var НаимАвтономии2_         : string;
    var МестоИздания2_          : string;
    СтрокаАдмУказателя  = nil;
    for k=1..секцУказательАдм.Count    do
      Hint("Административно-территориальный указатель...",k,секцУказательАдм.Count);
      if    НаимСубъектаРФ2_= НаимСубъектаРФ2[k]        and
            НаимАвтономии2_ = НаимАвтономии2[k]         and
            МестоИздания2_  = МестоИздания2[k]          then   --накопление номеров
            if   Номера<>""                             then
               Номера                   = Номера+", "+Str(НомерВЛППИ2[k]);
            else
               Номера                   = Str(НомерВЛППИ2[k]);
            end;
            СтрокаАдмУказателя[j]       = "    "+МестоИздания+" "+Номера;
      elsif НаимСубъектаРФ2_= НаимСубъектаРФ2[k]        and
            НаимАвтономии2_ = НаимАвтономии2[k]         and
            МестоИздания2_  <>МестоИздания2[k]          then  --смена места издания
            Номера                      = Str(НомерВЛППИ2[k]);
            МестоИздания                = МестоИздания2[k];
            j=j+1;
            СтрокаАдмУказателя[j]       = "    "+МестоИздания+" "+Номера;
      elsif НаимСубъектаРФ2_= НаимСубъектаРФ2[k]        and
            НаимАвтономии2_ <>НаимАвтономии2[k]         then  --смена автономии
            Номера                      = Str(НомерВЛППИ2[k]);
            НаимАвтономии               = НаимАвтономии2[k];
            j=j+1;
            СтрокаАдмУказателя[j]       = "|";
            j=j+1;
            СтрокаАдмУказателя[j]       = "/*"+НаимАвтономии+"*/";
            j=j+1;
            СтрокаАдмУказателя[j]       = "|";
            МестоИздания                = МестоИздания2[k];
            j=j+1;
            СтрокаАдмУказателя[j]       = "    "+МестоИздания+" "+Номера;
      elsif НаимСубъектаРФ2_<>НаимСубъектаРФ2[k]        then  --смена субъекта
            Номера                      = Str(НомерВЛППИ2[k]);
            НаимСубъектаРФ              = НаимСубъектаРФ2[k];
            j=j+1;
            СтрокаАдмУказателя[j]       = "|";
            j=j+1;
            СтрокаАдмУказателя[j]       = "/*"+НаимСубъектаРФ+"*/";
            j=j+1;
            СтрокаАдмУказателя[j]       = "|";
            if НаимАвтономии2[k]<>""                    and
               НаимАвтономии2[k]<>"v"                   then
              НаимАвтономии             = НаимАвтономии2[k];
              j=j+1;
              СтрокаАдмУказателя[j]     = "|";
              j=j+1;
              СтрокаАдмУказателя[j]     = "/*"+НаимАвтономии+"*/";
              j=j+1;
              СтрокаАдмУказателя[j]     = "|";
            end;
            МестоИздания                = МестоИздания2[k];
            j=j+1;
            СтрокаАдмУказателя[j]       = "    "+МестоИздания+" "+Номера;
      end;
      НаимСубъектаРФ2_=НаимСубъектаРФ2[k];
      НаимАвтономии2_ =НаимАвтономии2[k];
      МестоИздания2_  =МестоИздания2[k];
    end;
end;


  proc СозданиеАдмУказателя;
    var k       : integer;
    var ЛППИ    : TextFile;
    АнализИерархииРФ;
    ПодготовкаАдмУказателя;
    СозданиеСтрокАдмУказателя;
    -------
    if    ExistFolder(ПапкаЛППИ) = false                        then
      CreateFolder(ПапкаЛППИ);
    end;
    if  ExistFile(ПапкаЛППИ+"\АдмТеррУказатель.txt") = true     then
      RemoveFile(ПапкаЛППИ+"\АдмТеррУказатель.txt");
    end;
    ЛППИ        = TextFile.Create(ПапкаЛППИ+"\АдмТеррУказатель.txt",fmCreate);
    ------
    ЛППИ.WriteLn("");
    ЛППИ.WriteLn("АДМИНИСТРАТИВНО-ТЕРРИТОРИАЛЬНЫЙ УКАЗАТЕЛЬ");
    ЛППИ.WriteLn("МЕСТ ИЗДАНИЯ ГАЗЕТ");
    ЛППИ.WriteLn("");
    for k=1..LengthOfArray(СтрокаАдмУказателя)                  do
      Hint("Формирование файла...",k,LengthOfArray(СтрокаАдмУказателя));
      if СтрокаАдмУказателя[k]<>""                              and
         СтрокаАдмУказателя[k]<>"|"                             then
      ЛППИ.WriteLn(СтрокаАдмУказателя[k]);
      end;
      if СтрокаАдмУказателя[k]="|"                              then
      ЛППИ.WriteLn("");
      end;
    end;
    end;

--}

end