class inherited СИС2.БазовыйБланкРедактор "Годовая статистика поступлений", editor ПоступлениеГазеты;

import РКП_СИС Classes StringsFunctions, Recs, StdCode, Functions, FilterMaker, Def;

inclass

inobject
флСтатус                : CheckBox;
кнЗакрыть               : Button;
кнОбновитьСтатистику    : Button;
ФильтрНомеров           : string;


--------------------------------------------------------------------------------
--{ Обработчики событий бланка
  proc кнРасчетПриНажатии(Sender :Button);
    RI.ПоступлениеГазеты.ОбновитьСтатистику(Self.Record.Газета, Self.Record.ГодПоступления, РКП_Газеты.RI.Газета.опОбновитьКэшСтатАн );

--    var ГодыВыпуска :String[];
--    var vFlt :String;
--    var k :Integer;
--    var Q :Query;
--    EditorPost;
--    --srecord             = SubStr(ФильтрНомеров, Pos("{",ФильтрНомеров),Pos("}",ФильтрНомеров)-Pos("{",ФильтрНомеров)+1);  --вычисление строкового представления ссылки на запись газеты
--    --flt = 'Year(ДатаПринятияНаХранение)=' + Str(ГодПоступления);
--    --flt = flt + ' and Газета=' + Self.Record.Газета.DocIDStr + ' and (not НеПолучен) and isGroup = 0';
--    --flt = '('+flt+') and not(СозданОЛГС and НеПолучен)';
--    with FltMaker.CreateExt do
--      AddCondition( 'Year(ДатаПринятияНаХранение)=' + Str(ГодПоступления) );
--      AddCondition( 'Газета=' + Self.Record.Газета.DocIDStr );
--      AddCondition( 'not НеПолучен' );
--      AddCondition( 'isGroup=0' );
--      CompressConditionsToOne;
--      AddCondition( 'not(СозданОЛГС and НеПолучен)' );
--      vFlt = GetFilter;
--    end;
--    Q = Query.Create([РКП_Газеты.НомерГазеты]);
--    Q.Filter = vFlt;
--    Q.Order = 'ГодВыпуска';
--    --Q.LoadingFields = 'ГодВыпуска';
--    Q.Select;
--      for k = 1 .. Q.Count do
--        if (k = 1) then
--          ГодыВыпуска[1] = Str(Q.Current.ГодВыпуска);
--        else
--          if (Str(Q.Current.ГодВыпуска) <> ГодыВыпуска[LengthOfArray(ГодыВыпуска)]) then
--            ГодыВыпуска[LengthOfArray(ГодыВыпуска) + 1] = Str(Q.Current.ГодВыпуска);
--          fi;
--        fi;
--        Q.Next;
--      od;
--    if (LengthOfArray(ГодыВыпуска) = 1) then
--      Сервис.ОбработкаСтатистикиПоступлений(ФильтрНомеров, Int(ГодыВыпуска[1]), ГодПоступления, false, true);
--    elsif (LengthOfArray(ГодыВыпуска) > 1) then
--      k = Alternate('Выберите год выпуска для обновления расчетов:', ГодыВыпуска, 300);
--      if (k > 0) then
--        Сервис.ОбработкаСтатистикиПоступлений(ФильтрНомеров, Int(ГодыВыпуска[k]), ГодПоступления, false, true);
--      fi;
--    fi;
  end;--proc кнРасчетПриНажатии

  proc кнЗакрытьПриНажатии(Sender :Button);
    Close;
  end;

  proc шаблон_ПриСчитывании;
    inherited шаблон_ПриСчитывании;
    флСтатус.Enabled    = false;
    if   Year(today)=ГодПоступления then
      кнОбновитьСтатистику.Enabled = false;
    else
      кнОбновитьСтатистику.Enabled = true;
    end;
  end;

--}

end