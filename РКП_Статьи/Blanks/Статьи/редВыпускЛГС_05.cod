class inherited Статьи.редВыпускЛГС_04 "Создание указателя газет", editor ВыпускЛГС;

inclass

inobject
  var У_Газета[]                : record;
      секцУ_Газ                 : Section;
--      секцУ_Номера              : Section;
--      У_ДатаНачалаНомера[]      : date;
--      У_ОписаниеДатыНомера[]    : string;

--------------------------------------------------------------------------------
--{ Обработчики событий бланка
  proc СозданиеУказателяГазет;
    var Q                       : Query;
    var i,k,j: Integer;
    var ОписаниеГазеты          : string;
    var aГазета[]               : record;
    var aНомера[]               : string;
    var ПроектСтрокиНомеров     : string;
    #Warning "Отработать вариант для указателя газет, когда название начинаются с цифр и латиницы";
    У_Газета                    = nil;
    --A. Создание массива ссылок по особым правилам, с учетом приложений
    Q                           = Query.Create([РКП_Статьи.Роспись]);
    Q.Filter                    = "ГодЛетописи="+Str(ГодЛетописи)+
                                  " and ВыпускЛетописи="+Str(ВыпускЛетописи);
    Q.Select;
    Q.First;
    --организация цикла
      for i = 1..Q.Count                                        do
        if    Q.Current.Газета.ПриложениеКГазете = nil          and
              Q.Current.Газета.ПризнакОтсылки    = false        then
          if Q.Current.Газета<>nil                              then
            k                   = k+1;
            aГазета[k]          = Q.Current.Газета;
          end;
        end;
        Q.Next;
      end;--цикл запросу к статьям
    Q.Close;
    --B. Сортировка
    SortArray(aГазета);
    --C. Создание второго массива с уже уникальными значениями
    k                           = 0;
      for i = 1..LengthOfArray(aГазета)                         do
        if i = 1 then
          k                     = 1;
          У_Газета[k]           = aГазета[i];
        else
          if aГазета[i]<>aГазета[i-1]                           then
            k                   = k + 1;
            У_Газета[k]         = aГазета[i];
          end;
        end;
      end;--цикл по неуникальному массиву ссылок на газеты
      секцУ_Газ.Count           = k;
      секцУ_Газ.SortBy("У_Газета.НазваниеЛГС");
    --D. Заполнение подтаблицы уникальными значениями
      Record.УказательГазет.Clear;
      for i = 1..секцУ_Газ.Count                                do
        k                                       = Record.УказательГазет.Add;
        Record.УказательГазет[k].Газета         = У_Газета[i];
        ОписаниеГазеты                          = "";
        ОписаниеГазеты                          = Record.УказательГазет[k].Газета.НазваниеЛГС;
          ОписаниеГазеты                        = ОписаниеГазеты+". - ";
        if У_Газета[i].МестаИздания.Count>0                             then
          if У_Газета[i].МестаИздания.Items[1].МестоИздания.НаимБибл="" then
            ОписаниеГазеты                      = ОписаниеГазеты+
                                                  Record.УказательГазет[k].Газета.МестаИздания.Items[1].МестоИздания.НаимСокр;
          else
            ОписаниеГазеты                      = ОписаниеГазеты+
                                                  Record.УказательГазет[k].Газета.МестаИздания.Items[1].МестоИздания.НаимБибл;
          end;
          if SubStr(ОписаниеГазеты,Length(ОписаниеГазеты),1)="."        then
            ОписаниеГазеты                      = ОписаниеГазеты+" - ";
          else
            ОписаниеГазеты                      = ОписаниеГазеты+". - ";
          end;
        end;
        Record.УказательГазет[k].БибОписание    = ОписаниеГазеты;
      end;--цикл по секции с уникальными названиями газет, сортированной по названиям, с записью в подтаблицу
    --E. Формирование биб. описания
    --e1. организация цикла по подтаблице
      for k = 1..Record.УказательГазет.Count                    do
    --e2. создание массива описания номеров
        aНомера                         = nil;
--        У_ДатаНачалаНомера              = nil;
--        У_ОписаниеДатыНомера            = nil;
        Q                               = Query.Create([РКП_Статьи.Роспись]);
        Q.Filter                        = "ГодЛетописи="+Str(ГодЛетописи)+
                                          " and ВыпускЛетописи="+Str(ВыпускЛетописи)+
                                          " and Газета="+Str(Record.УказательГазет[k].Газета);
        Q.Select;
        Q.First;
        --организация цикла
        j                               = 0;
          for i = 1..Q.Count                                    do
            if Q.Current.ДатыВыхода<>nil                        or
               Q.Current.НомераВыхода<>nil                      then
              j                         = j + 1;
            end;
            if Q.Current.ДатыВыхода<>nil                        then
              aНомера[j]                = Q.Current.ДатыВыхода;
--              У_ОписаниеДатыНомера[j]   = Q.Current.ДатыВыхода;
--              У_ДатаНачалаНомера[j]     = Q.Current.ДатаНачалаНомера;
            end;
            if Q.Current.НомераВыхода<>nil                      then
              aНомера[j]                = aНомера[j]+" ("+Q.Current.НомераВыхода+")";
--              У_ОписаниеДатыНомера[j]   = У_ОписаниеДатыНомера[j]+" ("+Q.Current.НомераВыхода+")";
--              У_ДатаНачалаНомера[j]     = Q.Current.ДатаНачалаНомера;
            end;
            Q.Next;
          end;--цикл по запросу к статьям по одной газете, конец формирования списка неуникальных номеров
        Q.Close;
    --e3. выделение уникальных описаний, формирование списка номеров, запись в поля подтаблицы
        SortArray(aНомера);
--        секцУ_Номера.Count=j;
--        секцУ_Номера.SortBy("У_ДатаНачалаНомера");
        j                               = 0;
        for j = 1..LengthOfArray(aНомера)                       do
          --если список номеров короткий (=1), 
          --то обработка минимальная  - заменв ". - " на "," и перевод в нижний регистр
          if    LengthOfArray(aНомера)=1                        then
            ПроектСтрокиНомеров         = SubStr(aНомера[j],1,4);
            ПроектСтрокиНомеров         = ПроектСтрокиНомеров+", ";
            ПроектСтрокиНомеров         = ПроектСтрокиНомеров+Lo(SubStr(aНомера[j],9,500));
            if SubStr(ПроектСтрокиНомеров,Length(ПроектСтрокиНомеров),1)="." then
              ПроектСтрокиНомеров       = SubStr(ПроектСтрокиНомеров,1,Length(ПроектСтрокиНомеров)-1);
            end;
            Record.УказательГазет[k].Номера   = ПроектСтрокиНомеров;
          --если список длинный, то требуется сложный анализ
          elsif LengthOfArray(aНомера)>1                        then
    #Warning "Отработать вариант для указателя газет, когда описывается несколько номеров одной газеты";
    --нет алгоритма формирования записи
    --в текущей реализации они даются просто через ";"
            if j = 1 then
              Record.УказательГазет[k].Номера     = aНомера[j];
            else
              if aНомера[j]<>aНомера[j-1]                         then
                if Record.УказательГазет[k].Номера=nil            then
                  Record.УказательГазет[k].Номера   = aНомера[j];
                else
                  Record.УказательГазет[k].Номера   = Record.УказательГазет[k].Номера+"; "+aНомера[j];
                end;
              end;
            end; --условие на номер счетчика
          end;


--          if j = 1 then
--            Record.УказательГазет[k].Номера     = aНомера[j];
--          else
--            if aНомера[j]<>aНомера[j-1]                         then
--              if Record.УказательГазет[k].Номера=nil            then
--                Record.УказательГазет[k].Номера   = aНомера[j];
--              else
--                Record.УказательГазет[k].Номера   = Record.УказательГазет[k].Номера+"; "+aНомера[j];
--              end;
--            end;
--          end; --условие на номер счетчика
        end; --цикл по массиву неуникальных номеров
      end; --цикл по заполненной подтаблице газет
  end;--proc СозданиеУказателяГазет


--}

end